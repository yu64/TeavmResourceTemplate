


//このプロジェクトのGradleプラグインの指定
plugins {

	//fat-jar作成プラグイン
	//id 'com.github.johnrengelman.shadow' version '5.0.0'
	
}



//すべてのプロジェクトの設定
allprojects {

    apply plugin: "eclipse"

    ext {
    
    	teavmOutputPath = "test/resources/";
    }
    
    
    repositories {

        google()
        mavenCentral()
        jcenter()
    }

    dependencies {

        //implementation "AAAA:BBBB:VVVV"
        //implementation fileTree(dir: 'lib', include: ["*"]);
        //[newsourceset]Implementation ""
    }
    
    
	tasks.withType(JavaCompile) {
	
	    options.encoding = "UTF-8";
	}

}

//サブプロジェクトの設定
subprojects {

    apply plugin: "java-library"
    
    //javaの設定
	java {

	    toolchain {
	        //Javaのバージョンを指定
	        languageVersion = JavaLanguageVersion.of(11)
	    }
	}
}





project(":app") {

    dependencies {
    
    	implementation(project(":teavm")) {

             exclude group: '*', module: '*'
        }
    }

}

project(":teavm") {

}


//タスクを作成
//とある値の情報を表示する
task printTest {

    //タスクの処理ではなく、設定を記述する

    //最後の処理を設定
    doLast {
        println('==========Task Start==========');
        
        def obj = this.jar;
        
        println("=====Method=====");
        obj.metaClass.getMetaMethods().forEach({println(getSignature())});
        println("=====Property=====");
        obj.metaClass.getProperties().forEach({

            print(String.format("(%s) %s", getType(), getName()));
            if(obj instanceof Class)
            {
                println();
                return;
            }

            def value = null;
            try
            {
                value = getProperty(obj);
                println(String.format("   =   (%s) %s", value?.class, value));
            }
            catch(Exception e)
            {
                println(" = [N/A]");
            }
        })

        println("=====Object=====");
        println(obj.class);
        println(obj);
        println('==========Task End==========');
    }

}










